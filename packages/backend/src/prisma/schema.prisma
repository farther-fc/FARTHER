generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fid       Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   String?

  allocations Allocation[]
}

// Airdrop allocation
model Allocation {
  id        String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  userId    String         @db.Uuid
  user      User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  airdropId String?        @db.Uuid
  airdrop   Airdrop?       @relation(fields: [airdropId], references: [id])
  isClaimed Boolean        @default(false)
  type      AllocationType
  amount    String
  // Index of the node in the merkle tree - can stay undefined until the merkle root is calculated
  index     Int?

  tweet Tweet?

  @@unique([userId, airdropId])
}

enum AllocationType {
  POWER_USER
  EVANGELIST
}

model Tweet {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  allocationId String     @unique @db.Uuid
  allocation   Allocation @relation(fields: [allocationId], references: [id], onDelete: Cascade)
  tweetId      String     @unique

  @@unique([allocationId, tweetId])
}

// Airdrop
model Airdrop {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  number    Int      @unique
  // Airdrop creation time == snapshot time
  createdAt DateTime @default(now())
  chainId   Int
  address   String?
  root      String?
  amount    String

  // Evanglist airdrops have a fixed supply. Any remaining supply is carried over to the next airdorp.
  supply String?

  startTime DateTime @default(now())
  endTime   DateTime @default(now())

  allocations Allocation[]

  @@unique([number, chainId])
  @@unique([address, chainId])
}
