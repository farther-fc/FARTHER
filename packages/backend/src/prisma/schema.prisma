generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  // Using Farcaster FID as unique identifier
  id        Int      @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  allocations Allocation[]
}

// Airdrop allocation
model Allocation {
  // Using hash of user ID, allocation type, chain ID, and airdrop start time as the unique identifier
  id        String         @id
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  userId    Int            
  user      User           @relation(fields: [userId], references: [id])
  airdropId String?        @db.Uuid
  airdrop   Airdrop?       @relation(fields: [airdropId], references: [id])
  isClaimed Boolean        @default(false)
  type      AllocationType
  amount    String
  // Index of the node in the merkle tree - can stay undefined until the merkle root is calculated
  index     Int?

  // Address of user receiving the allocation - the reason this doesn't live at the user level is we user Neynar &
  // the user's wallet connection, and don't store the recipient's address until an airdrop merkle root is calculated.
  address   String?

  tweets     Tweet[]

  @@unique([userId, airdropId])
}

enum AllocationType {
  POWER_USER
  EVANGELIST
}

model Tweet {
  // Using twitter tweet id as the unique identifier
  id           String     @id
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  allocationId String     
  allocation   Allocation @relation(fields: [allocationId], references: [id])

  // Each tweet has its own reward, which gets summed to the allocation amount
  reward        String
}

// Airdrop
model Airdrop {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  // Airdrop creation time == snapshot time
  createdAt DateTime @default(now())
  chainId   Int
  address   String?
  root      String?
  amount    String
  startTime DateTime
  endTime   DateTime

  allocations Allocation[]

  @@unique([address, chainId])
}
