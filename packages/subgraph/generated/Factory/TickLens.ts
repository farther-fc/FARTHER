// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class TickLens__getPopulatedTicksInWordResultPopulatedTicksStruct extends ethereum.Tuple {
  get tick(): i32 {
    return this[0].toI32();
  }

  get liquidityNet(): BigInt {
    return this[1].toBigInt();
  }

  get liquidityGross(): BigInt {
    return this[2].toBigInt();
  }
}

export class TickLens extends ethereum.SmartContract {
  static bind(address: Address): TickLens {
    return new TickLens("TickLens", address);
  }

  getPopulatedTicksInWord(
    pool: Address,
    tickBitmapIndex: i32,
  ): Array<TickLens__getPopulatedTicksInWordResultPopulatedTicksStruct> {
    let result = super.call(
      "getPopulatedTicksInWord",
      "getPopulatedTicksInWord(address,int16):((int24,int128,uint128)[])",
      [
        ethereum.Value.fromAddress(pool),
        ethereum.Value.fromI32(tickBitmapIndex),
      ],
    );

    return result[0].toTupleArray<TickLens__getPopulatedTicksInWordResultPopulatedTicksStruct>();
  }

  try_getPopulatedTicksInWord(
    pool: Address,
    tickBitmapIndex: i32,
  ): ethereum.CallResult<
    Array<TickLens__getPopulatedTicksInWordResultPopulatedTicksStruct>
  > {
    let result = super.tryCall(
      "getPopulatedTicksInWord",
      "getPopulatedTicksInWord(address,int16):((int24,int128,uint128)[])",
      [
        ethereum.Value.fromAddress(pool),
        ethereum.Value.fromI32(tickBitmapIndex),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<TickLens__getPopulatedTicksInWordResultPopulatedTicksStruct>(),
    );
  }
}
